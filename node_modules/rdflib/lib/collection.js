'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _blankNode = _interopRequireDefault(require("./blank-node"));

var _classOrder = _interopRequireDefault(require("./class-order"));

var _nodeInternal = _interopRequireDefault(require("./node-internal"));

var Collection =
/*#__PURE__*/
function (_Node) {
  (0, _inherits2.default)(Collection, _Node);

  function Collection(initial) {
    var _this;

    (0, _classCallCheck2.default)(this, Collection);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Collection).call(this));
    _this.termType = Collection.termType;
    _this.id = _blankNode.default.nextId++;
    _this.elements = [];
    _this.closed = false;

    if (initial && initial.length > 0) {
      initial.forEach(function (element) {
        _this.elements.push(_nodeInternal.default.fromValue(element));
      });
    }

    return _this;
  }

  (0, _createClass2.default)(Collection, [{
    key: "append",
    value: function append(element) {
      return this.elements.push(element);
    }
  }, {
    key: "close",
    value: function close() {
      this.closed = true;
      return this.closed;
    }
  }, {
    key: "shift",
    value: function shift() {
      return this.elements.shift();
    }
  }, {
    key: "substitute",
    value: function substitute(bindings) {
      var elementsCopy = this.elements.map(function (ea) {
        ea.substitute(bindings);
      });
      return new Collection(elementsCopy);
    }
  }, {
    key: "toNT",
    value: function toNT() {
      return _blankNode.default.NTAnonymousNodePrefix + this.id;
    }
  }, {
    key: "toString",
    value: function toString() {
      return '(' + this.elements.join(' ') + ')';
    }
  }, {
    key: "unshift",
    value: function unshift(element) {
      return this.elements.unshift(element);
    }
  }]);
  return Collection;
}(_nodeInternal.default);

exports.default = Collection;
Collection.termType = 'Collection';
Collection.prototype.classOrder = _classOrder.default['Collection'];
Collection.prototype.compareTerm = _blankNode.default.prototype.compareTerm;
Collection.prototype.isVar = 0;