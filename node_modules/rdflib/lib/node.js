'use strict'; // This file attaches all functionality to Node
// that would otherwise require circular dependencies.

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _nodeInternal = _interopRequireDefault(require("./node-internal"));

var _collection = _interopRequireDefault(require("./collection"));

var _literal = _interopRequireDefault(require("./literal"));

var _namespace = _interopRequireDefault(require("./namespace"));

var _default = _nodeInternal.default;
/**
 * Creates an RDF Node from a native javascript value.
 * RDF Nodes are returned unchanged, undefined returned as itself.
 * @method fromValue
 * @static
 * @param value {Node|Date|String|Number|Boolean|Undefined}
 * @return {Node|Collection}
 */

exports.default = _default;

_nodeInternal.default.fromValue = function fromValue(value) {
  if (typeof value === 'undefined' || value === null) {
    return value;
  }

  var isNode = value && value.termType;

  if (isNode) {
    // a Node subclass or a Collection
    return value;
  }

  if (Array.isArray(value)) {
    return new _collection.default(value);
  }

  return _literal.default.fromValue(value);
};

var ns = {
  xsd: (0, _namespace.default)('http://www.w3.org/2001/XMLSchema#')
};

_nodeInternal.default.toJS = function toJS(term) {
  if (term.elements) {
    return term.elements.map(_nodeInternal.default.toJS); // Array node (not standard RDFJS)
  }

  if (!term.datatype) return term; // Objects remain objects

  if (term.datatype.sameTerm(ns.xsd('boolean'))) {
    return term.value === '1';
  }

  if (term.datatype.sameTerm(ns.xsd('dateTime')) || term.datatype.sameTerm(ns.xsd('date'))) {
    return new Date(term.value);
  }

  if (term.datatype.sameTerm(ns.xsd('integer')) || term.datatype.sameTerm(ns.xsd('float')) || term.datatype.sameTerm(ns.xsd('decimal'))) {
    var z = Number(term.value);
    return Number(term.value);
  }

  return term.value;
};