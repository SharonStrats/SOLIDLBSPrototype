{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\src\\\\components\\\\Utils\\\\LanguageDropdown\\\\language-dropdown.component.js\";\nimport React, { Component } from \"react\";\nimport { Dropdown } from \"./..\";\nimport { withToastManager } from 'react-toast-notifications';\nvar languages = {\n  en: {\n    id: \"en\",\n    icon: \"us\"\n  },\n  es: {\n    id: \"es\",\n    icon: \"es\"\n  },\n  \"en-US\": {\n    id: \"en-US\",\n    icon: \"us\"\n  }\n};\n\nvar LanguageDropdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LanguageDropdown, _Component);\n\n  function LanguageDropdown() {\n    var _this;\n\n    _classCallCheck(this, LanguageDropdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LanguageDropdown).call(this));\n\n    _this.getLanguage = function () {\n      return localStorage.getItem(\"i18nextLng\") || \"en\";\n    };\n\n    _this.onLanguageSelect = function (nextLanguage) {\n      var _this$props = _this.props,\n          i18n = _this$props.i18n,\n          toastManager = _this$props.toastManager;\n      toastManager.toasts.forEach(function (toast) {\n        return toastManager.remove(toast.id);\n      });\n      i18n.changeLanguage(nextLanguage);\n\n      _this.setState({\n        language: _this.getLanguage()\n      });\n    };\n\n    _this.state = {\n      language: _this.getLanguage()\n    };\n    return _this;\n  }\n\n  _createClass(LanguageDropdown, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var t = this.props.t;\n      var language = this.state.language;\n      var profileOpts = [{\n        label: t(\"navBar.languages.en\"),\n        onClick: function onClick() {\n          return _this2.onLanguageSelect(\"en\");\n        },\n        icon: 'us',\n        customIcon: true\n      }, {\n        label: t(\"navBar.languages.es\"),\n        onClick: function onClick() {\n          return _this2.onLanguageSelect(\"es\");\n        },\n        icon: 'es',\n        customIcon: true\n      }];\n      return React.createElement(Dropdown, {\n        actions: profileOpts,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flag-icon flag-icon-\".concat(language && languages[language] ? languages[language].icon : \"us\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LanguageDropdown;\n}(Component);\n\nexport default withToastManager(LanguageDropdown);","map":{"version":3,"sources":["C:\\Users\\SoDiAl\\Documents\\WebDev2019\\SolidReactTest\\src\\components\\Utils\\LanguageDropdown\\language-dropdown.component.js"],"names":["React","Component","Dropdown","withToastManager","languages","en","id","icon","es","LanguageDropdown","getLanguage","localStorage","getItem","onLanguageSelect","nextLanguage","props","i18n","toastManager","toasts","forEach","toast","remove","changeLanguage","setState","language","state","t","profileOpts","label","onClick","customIcon"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AAGA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE;AACFC,IAAAA,EAAE,EAAE,IADF;AAEFC,IAAAA,IAAI,EAAE;AAFJ,GADY;AAKhBC,EAAAA,EAAE,EAAE;AACFF,IAAAA,EAAE,EAAE,IADF;AAEFC,IAAAA,IAAI,EAAE;AAFJ,GALY;AAShB,WAAS;AACPD,IAAAA,EAAE,EAAE,OADG;AAEPC,IAAAA,IAAI,EAAE;AAFC;AATO,CAAlB;;IAeME,gB;;;;;AACJ,8BAAc;AAAA;;AAAA;;AACZ;;AADY,UAKdC,WALc,GAKA;AAAA,aAAMC,YAAY,CAACC,OAAb,CAAqB,YAArB,KAAsC,IAA5C;AAAA,KALA;;AAAA,UAOdC,gBAPc,GAOK,UAAAC,YAAY,EAAI;AAAA,wBACF,MAAKC,KADH;AAAA,UACzBC,IADyB,eACzBA,IADyB;AAAA,UACnBC,YADmB,eACnBA,YADmB;AAEjCA,MAAAA,YAAY,CAACC,MAAb,CAAoBC,OAApB,CAA4B,UAAAC,KAAK;AAAA,eAAGH,YAAY,CAACI,MAAb,CAAoBD,KAAK,CAACd,EAA1B,CAAH;AAAA,OAAjC;AACAU,MAAAA,IAAI,CAACM,cAAL,CAAoBR,YAApB;;AACA,YAAKS,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,MAAKd,WAAL;AADE,OAAd;AAID,KAfa;;AAEZ,UAAKe,KAAL,GAAa;AAAED,MAAAA,QAAQ,EAAE,MAAKd,WAAL;AAAZ,KAAb;AAFY;AAGb;;;;6BAaQ;AAAA;;AAAA,UACCgB,CADD,GACQ,KAAKX,KADb,CACCW,CADD;AAAA,UAECF,QAFD,GAEc,KAAKC,KAFnB,CAECD,QAFD;AAGP,UAAMG,WAAW,GAAG,CAClB;AACEC,QAAAA,KAAK,EAAEF,CAAC,CAAC,qBAAD,CADV;AAEEG,QAAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAChB,gBAAL,CAAsB,IAAtB,CAAN;AAAA,SAFX;AAGEN,QAAAA,IAAI,EAAE,IAHR;AAIEuB,QAAAA,UAAU,EAAE;AAJd,OADkB,EAOlB;AACEF,QAAAA,KAAK,EAAEF,CAAC,CAAC,qBAAD,CADV;AAEEG,QAAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAChB,gBAAL,CAAsB,IAAtB,CAAN;AAAA,SAFX;AAGEN,QAAAA,IAAI,EAAE,IAHR;AAIEuB,QAAAA,UAAU,EAAE;AAJd,OAPkB,CAApB;AAcA,aACE,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAEH,WAAnB;AAAiC,QAAA,KAAK,EAAE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,gCACPH,QAAQ,IAAIpB,SAAS,CAACoB,QAAD,CAArB,GAAkCpB,SAAS,CAACoB,QAAD,CAAT,CAAoBjB,IAAtD,GAA6D,IADtD,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AASD;;;;EA3C4BN,S;;AA8C/B,eAAeE,gBAAgB,CAACM,gBAAD,CAA/B","sourcesContent":["import React, { Component } from \"react\";\nimport { Dropdown } from \"@util-components\";\nimport { withToastManager } from 'react-toast-notifications';\n\n\nconst languages = {\n  en: {\n    id: \"en\",\n    icon: \"us\"\n  },\n  es: {\n    id: \"es\",\n    icon: \"es\"\n  },\n  \"en-US\": {\n    id: \"en-US\",\n    icon: \"us\"\n  }\n};\n\nclass LanguageDropdown extends Component {\n  constructor() {\n    super();\n    this.state = { language: this.getLanguage() };\n  }\n\n  getLanguage = () => localStorage.getItem(\"i18nextLng\") || \"en\";\n\n  onLanguageSelect = nextLanguage => {\n    const { i18n, toastManager } = this.props;\n    toastManager.toasts.forEach(toast=> toastManager.remove(toast.id))\n    i18n.changeLanguage(nextLanguage);\n    this.setState({\n      language: this.getLanguage()\n    });\n\n  };\n  render() {\n    const { t }  = this.props;\n    const { language } = this.state;\n    const profileOpts = [\n      {\n        label: t(\"navBar.languages.en\"),\n        onClick: () => this.onLanguageSelect(\"en\"),\n        icon: 'us',\n        customIcon: true,\n      },\n      {\n        label: t(\"navBar.languages.es\"),\n        onClick: () => this.onLanguageSelect(\"es\"),\n        icon: 'es',\n        customIcon: true\n      }\n    ];\n    return (\n      <Dropdown actions={profileOpts}  hover={true}>\n        <div\n          className={`flag-icon flag-icon-${\n            language && languages[language] ? languages[language].icon : \"us\"\n          }`}\n        />\n      </Dropdown>\n    );\n  }\n}\n\nexport default withToastManager(LanguageDropdown);\n"]},"metadata":{},"sourceType":"module"}