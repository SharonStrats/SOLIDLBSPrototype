{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { Component } from \"react\";\n\n/**\n* ErrorBoundary component to catch React component errors\n* You can use you own markup to show Error in your components\n*/\nvar ErrorBoundary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ErrorBoundary, _Component);\n\n  function ErrorBoundary(props) {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ErrorBoundary).call(this, props));\n    _this.state = _this.state = {\n      hasError: false,\n      error: null,\n      info: null\n    };\n    return _this;\n  } // Catch error and update state to render custom error component\n\n\n  _createClass(ErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, info) {\n      this.setState({\n        hasError: true,\n        error: error,\n        info: info\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.hasError) {\n        return this.props.component(this.state.error, this.state.info);\n      } else {\n        return this.props.children;\n      }\n    }\n  }]);\n\n  return ErrorBoundary;\n}(Component);\n\nexport { ErrorBoundary as default };","map":{"version":3,"sources":["C:\\Users\\SoDiAl\\Documents\\WebDev2019\\SolidReactTest\\src\\components\\ErrorBoundary\\error-boundary.component.js"],"names":["Component","ErrorBoundary","props","state","hasError","error","info","setState","component","children"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAOA;;;;IAIqBC,a;;;;;AACnB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,MAAKA,KAAL,GAAa;AACxBC,MAAAA,QAAQ,EAAE,KADc;AAExBC,MAAAA,KAAK,EAAE,IAFiB;AAGxBC,MAAAA,IAAI,EAAE;AAHkB,KAA1B;AAFiB;AAOlB,G,CACD;;;;;sCACkBD,K,EAAOC,I,EAAM;AAC7B,WAAKC,QAAL,CAAc;AACZH,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEA,KAFK;AAGZC,QAAAA,IAAI,EAAEA;AAHM,OAAd;AAKD;;;6BAEQ;AACP,UAAI,KAAKH,KAAL,CAAWC,QAAf,EAAyB;AACvB,eAAO,KAAKF,KAAL,CAAWM,SAAX,CAAqB,KAAKL,KAAL,CAAWE,KAAhC,EAAuC,KAAKF,KAAL,CAAWG,IAAlD,CAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAKJ,KAAL,CAAWO,QAAlB;AACD;AACF;;;;EAxBwCT,S;;SAAtBC,a","sourcesContent":["import { Component } from \"react\";\n\ntype Props = {\n  children: Node,\n  component: (error: String, info: Object) => Node\n};\n\n/**\n* ErrorBoundary component to catch React component errors\n* You can use you own markup to show Error in your components\n*/\nexport default class ErrorBoundary extends Component<Props> {\n  constructor(props) {\n    super(props);\n    this.state = this.state = {\n      hasError: false,\n      error: null,\n      info: null\n    };\n  }\n  // Catch error and update state to render custom error component\n  componentDidCatch(error, info) {\n    this.setState({\n      hasError: true,\n      error: error,\n      info: info\n    });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return this.props.component(this.state.error, this.state.info);\n    } else {\n      return this.props.children;\n    }\n  }\n\n  props: Props;\n}\n"]},"metadata":{},"sourceType":"module"}