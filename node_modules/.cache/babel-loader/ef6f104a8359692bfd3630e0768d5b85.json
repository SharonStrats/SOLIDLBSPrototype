{"ast":null,"code":"import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-xhr-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\ni18n // load translation using xhr -> see /public/locales\n// learn more: https://github.com/i18next/i18next-xhr-backend\n.use(Backend) // detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector) // pass the i18n instance to the react-i18next components.\n// Alternative use the I18nextProvider: https://react.i18next.com/components/i18nextprovider\n.use(initReactI18next).init({\n  fallbackLng: \"en-US\",\n  debug: false,\n  whitelist: [\"en-US\", \"en\", \"es\"],\n  // special options for react-i18next\n  // learn more: https://react.i18next.com/components/i18next-instance\n  react: {\n    wait: true\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["C:\\Users\\SoDiAl\\Documents\\WebDev2019\\SolidReactTest\\src\\i18n.js"],"names":["i18n","initReactI18next","Backend","LanguageDetector","use","init","fallbackLng","debug","whitelist","react","wait"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AAEAH,IAAI,CACF;AACA;AAFE,CAGDI,GAHH,CAGOF,OAHP,EAIE;AACA;AALF,CAMGE,GANH,CAMOD,gBANP,EAOE;AACA;AARF,CASGC,GATH,CASOH,gBATP,EAUGI,IAVH,CAUQ;AACJC,EAAAA,WAAW,EAAE,OADT;AAEJC,EAAAA,KAAK,EAAE,KAFH;AAGJC,EAAAA,SAAS,EAAE,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,CAHP;AAIJ;AACA;AACAC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AADD;AANH,CAVR;AAqBA,eAAeV,IAAf","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-xhr-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\ni18n\n  // load translation using xhr -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to the react-i18next components.\n  // Alternative use the I18nextProvider: https://react.i18next.com/components/i18nextprovider\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en-US\",\n    debug: false,\n    whitelist: [\"en-US\", \"en\", \"es\"],\n    // special options for react-i18next\n    // learn more: https://react.i18next.com/components/i18next-instance\n    react: {\n      wait: true\n    }\n  });\n\nexport default i18n;\n"]},"metadata":{},"sourceType":"module"}