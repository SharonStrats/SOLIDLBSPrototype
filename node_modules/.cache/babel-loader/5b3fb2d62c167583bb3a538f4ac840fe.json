{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = traverse;\n\nvar _definitions = require(\"../definitions\");\n\nfunction traverse(node, handlers, state) {\n  if (typeof handlers === \"function\") {\n    handlers = {\n      enter: handlers\n    };\n  }\n\n  var _handlers = handlers,\n      enter = _handlers.enter,\n      exit = _handlers.exit;\n  traverseSimpleImpl(node, enter, exit, state, []);\n}\n\nfunction traverseSimpleImpl(node, enter, exit, state, ancestors) {\n  var keys = _definitions.VISITOR_KEYS[node.type];\n  if (!keys) return;\n  if (enter) enter(node, ancestors, state);\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = keys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var key = _step.value;\n      var subNode = node[key];\n\n      if (Array.isArray(subNode)) {\n        for (var i = 0; i < subNode.length; i++) {\n          var child = subNode[i];\n          if (!child) continue;\n          ancestors.push({\n            node: node,\n            key: key,\n            index: i\n          });\n          traverseSimpleImpl(child, enter, exit, state, ancestors);\n          ancestors.pop();\n        }\n      } else if (subNode) {\n        ancestors.push({\n          node: node,\n          key: key\n        });\n        traverseSimpleImpl(subNode, enter, exit, state, ancestors);\n        ancestors.pop();\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  if (exit) exit(node, ancestors, state);\n}","map":null,"metadata":{},"sourceType":"script"}