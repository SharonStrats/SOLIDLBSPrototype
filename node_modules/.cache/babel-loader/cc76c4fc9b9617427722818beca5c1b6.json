{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\src\\\\containers\\\\RestaurantSearch\\\\restaurantSearch.container.js\";\n\nimport React, { Fragment } from 'react';\nimport RestaurantSearchContent from \"./restaurantSearch.component\"; //import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { withToastManager } from 'react-toast-notifications';\nimport { useWebId } from '@inrupt/solid-react-components';\nimport { Header, RestaurantSearchContainer, RestaurantSearchWrapper } from \"./restaurantSearch.style\";\nimport zomato from \"../../api/zomato\";\n\nvar onSearchSubmit2 =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(term) {\n    var response2;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return zomato.get('/search', {\n              params: {\n                query: 'entity_id=94741%20&entity_type=zone'\n              }\n            });\n\n          case 2:\n            response2 = _context.sent;\n\n            _this.setState({\n              restaurants: response2.data.restaurants\n            });\n\n            console.log(response2.data.restaurants);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function onSearchSubmit2(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\r\n * We are using ldflex to fetch profile data from a solid pod.\r\n * ldflex libary is using json-LD for this reason you will see async calls\r\n * when we want to get a field value, why ? becuase they are expanded the data\r\n * this means the result will have a better format to read on Javascript.\r\n * for more information please go to: https://github.com/solid/query-ldflex\r\n */\n\n\nvar RestaurantSearch = function RestaurantSearch(_ref2) {\n  var ToastManager = _ref2.ToastManager;\n  //                       webId={this.props.webId}\n  var webId = useWebId();\n  var data = onSearchSubmit2('test');\n  var image = '';\n  var isLoading = false;\n  var name = 'sharon';\n  var selectedDate = null;\n  return React.createElement(RestaurantSearchWrapper, {\n    \"data-testid\": \"restaurant-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(RestaurantSearchContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, webId && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(RestaurantSearchContent, {\n    name: name,\n    image: image,\n    isLoading: isLoading,\n    selectedDate: selectedDate,\n    data: _this.state.restaurants,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))));\n};\n\nexport default withToastManager(RestaurantSearch);","map":{"version":3,"sources":["C:\\Users\\SoDiAl\\Documents\\WebDev2019\\SolidReactTest\\src\\containers\\RestaurantSearch\\restaurantSearch.container.js"],"names":["React","Fragment","RestaurantSearchContent","withToastManager","useWebId","Header","RestaurantSearchContainer","RestaurantSearchWrapper","zomato","onSearchSubmit2","term","get","params","query","response2","setState","restaurants","data","console","log","RestaurantSearch","ToastManager","webId","image","isLoading","name","selectedDate","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,uBAAP,qC,CACA;;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,SACIC,MADJ,EAEIC,yBAFJ,EAGIC,uBAHJ;AAMA,OAAOC,MAAP;;AAIG,IAAMC,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACKF,MAAM,CAACG,GAAP,CAAW,SAAX,EAAsB;AAC1CC,cAAAA,MAAM,EAAE;AAAEC,gBAAAA,KAAK,EAAE;AAAT;AADkC,aAAtB,CADL;;AAAA;AACbC,YAAAA,SADa;;AAInB,YAAA,KAAI,CAACC,QAAL,CAAc;AAAEC,cAAAA,WAAW,EAAEF,SAAS,CAACG,IAAV,CAAeD;AAA9B,aAAd;;AACAE,YAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACG,IAAV,CAAeD,WAA3B;;AALmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfP,eAAe;AAAA;AAAA;AAAA,GAArB;AASH;;;;;;;;;AAOC,IAAMW,gBAAgB,GAAG,SAAnBA,gBAAmB,QAAsB;AAAA,MAAnBC,YAAmB,SAAnBA,YAAmB;AAE5C;AAEA,MAAMC,KAAK,GAAGlB,QAAQ,EAAtB;AAEA,MAAMa,IAAI,GAAGR,eAAe,CAAC,MAAD,CAA5B;AACA,MAAMc,KAAK,GAAG,EAAd;AACA,MAAMC,SAAS,GAAG,KAAlB;AACA,MAAMC,IAAI,GAAG,QAAb;AACA,MAAMC,YAAY,GAAG,IAArB;AACI,SACI,oBAAC,uBAAD;AAAyB,mBAAY,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,IACF,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGA,oBAAC,uBAAD;AACI,IAAA,IAAI,EAAEG,IADV;AAEI,IAAA,KAAK,EAAEF,KAFX;AAGI,IAAA,SAAS,EAAEC,SAHf;AAMI,IAAA,YAAY,EAAEE,YANlB;AASI,IAAA,IAAI,EAAE,KAAI,CAACC,KAAL,CAAWX,WATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CAFR,CADJ,CADJ;AA+BP,CA1CA;;AA4CD,eAAeb,gBAAgB,CAACiB,gBAAD,CAA/B","sourcesContent":["import React, { Fragment } from 'react';\r\nimport RestaurantSearchContent from './restaurantSearch.component';\r\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { withToastManager } from 'react-toast-notifications';\r\nimport { useWebId } from '@inrupt/solid-react-components';\r\nimport {\r\n    Header,\r\n    RestaurantSearchContainer,\r\n    RestaurantSearchWrapper\r\n} from './restaurantSearch.style';\r\n\r\nimport zomato from '../../api/zomato';\r\n\r\n\r\n \r\n   const onSearchSubmit2 = async (term) => {\r\n        const response2 = await zomato.get('/search', { \r\n            params: { query: 'entity_id=94741%20&entity_type=zone' }        \r\n        });\r\n        this.setState({ restaurants: response2.data.restaurants });\r\n        console.log(response2.data.restaurants);\r\n        \r\n    }\r\n\r\n/**\r\n * We are using ldflex to fetch profile data from a solid pod.\r\n * ldflex libary is using json-LD for this reason you will see async calls\r\n * when we want to get a field value, why ? becuase they are expanded the data\r\n * this means the result will have a better format to read on Javascript.\r\n * for more information please go to: https://github.com/solid/query-ldflex\r\n */\r\n const RestaurantSearch = ({ ToastManager }) => {\r\n   \r\n    //                       webId={this.props.webId}\r\n   \r\n    const webId = useWebId();\r\n\r\n    const data = onSearchSubmit2('test');\r\n    const image = '';\r\n    const isLoading = false;\r\n    const name = 'sharon';\r\n    const selectedDate = null;\r\n        return (\r\n            <RestaurantSearchWrapper data-testid=\"restaurant-component\">\r\n                <RestaurantSearchContainer>\r\n                    {webId && (\r\n                        <Fragment>\r\n                            <Header>\r\n                            </Header>\r\n                        <RestaurantSearchContent\r\n                            name={name}\r\n                            image={image}\r\n                            isLoading={isLoading}\r\n \r\n   \r\n                            selectedDate={selectedDate}\r\n           \r\n                  \r\n                            data={this.state.restaurants}\r\n        \r\n                  \r\n                    \r\n                \r\n                    \r\n                       \r\n                        />\r\n                        </Fragment>\r\n\r\n                    )}\r\n                </RestaurantSearchContainer>\r\n            </RestaurantSearchWrapper>\r\n        );\r\n    \r\n};\r\n\r\nexport default withToastManager(RestaurantSearch);\r\n"]},"metadata":{},"sourceType":"module"}