{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\src\\\\containers\\\\RestaurantSearch\\\\restaurantSearch.component.js\";\nimport React from 'react';\nimport isLoading from \"../../hocs/isLoading\";\nimport { withTranslation } from 'react-i18next';\nimport \"./restaurantList.css\";\nimport { WelcomeWrapper, WelcomeCard, WeatherContainer, LocationInputContainer, GoButton } from \"./restaurantSearch.style\"; //import { RestaurantCard  } from './components';\n//import { Container } from 'react-bootstrap';\n\nimport { withToastManager } from 'react-toast-notifications';\nimport zomato from \"../../api/zomato\";\n\nvar RestaurantCard = function RestaurantCard(props) {\n  return React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.restaurant));\n};\n\nvar RestaurantCardList = function RestaurantCardList(props) {\n  console.log(props.restaurants);\n  var restaurants = props.restaurants.map(function (restaurant) {\n    return React.createElement(RestaurantCard, {\n      key: restaurant.restaurant.id,\n      restaurant: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  });\n  return React.createElement(\"div\", {\n    className: \"restaurant-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, restaurants);\n};\n\nvar RestaurantSearchContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RestaurantSearchContent, _React$Component);\n\n  function RestaurantSearchContent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RestaurantSearchContent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RestaurantSearchContent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      restaurants: []\n    };\n\n    _this.getRestaurants =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(term) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return zomato.get('/search', {\n                  params: {\n                    query: 'entity_id=94741%20&entity_type=zone'\n                  }\n                });\n\n              case 2:\n                response = _context.sent;\n\n                _this.setState({\n                  restaurants: response.data.restaurants\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(RestaurantSearchContent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getRestaurants();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //console.log(props.city.toString())\n      if (this.props.webId !== undefined) {// CUPurl = props.webId.replace('profile/card#me', '') + 'private/events#';\n        // CUPurl = props.webId;\n      }\n\n      return (// props.isLoading ? <WelcomeWrapper data-testid=\"welcome-wrapper\"><LoadingScreen /> </WelcomeWrapper> :\n        React.createElement(WelcomeWrapper, {\n          \"data-testid\": \"welcome-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(WelcomeCard, {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Welcome \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, this.props.name)), React.createElement(LocationInputContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Show me restaurants in \", React.createElement(\"input\", {\n          id: \"locationInput\",\n          placeholder: \"city state\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(GoButton, {\n          onClick: function onClick() {\n            return console.log(\"hello\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Go!\")), React.createElement(\"span\", {\n          id: \"inputErrorMessage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Now showing you restaurants nearby \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, this.props.city, \", \", this.props.state)), React.createElement(RestaurantCardList, {\n          restaurants: this.state.restaurants,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        })), React.createElement(WeatherContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }))\n      );\n    }\n  }]);\n\n  return RestaurantSearchContent;\n}(React.Component);\n\n;\nexport { RestaurantSearchContent };\nexport default withTranslation()(isLoading(withToastManager(RestaurantSearchContent)));","map":{"version":3,"sources":["C:\\Users\\SoDiAl\\Documents\\WebDev2019\\SolidReactTest\\src\\containers\\RestaurantSearch\\restaurantSearch.component.js"],"names":["React","isLoading","withTranslation","WelcomeWrapper","WelcomeCard","WeatherContainer","LocationInputContainer","GoButton","withToastManager","zomato","RestaurantCard","props","restaurant","RestaurantCardList","console","log","restaurants","map","id","name","RestaurantSearchContent","state","getRestaurants","term","get","params","query","response","setState","data","webId","undefined","city","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport isLoading from '@hocs/isLoading';\r\nimport { withTranslation } from 'react-i18next';\r\nimport './restaurantList.css';\r\nimport {\r\n  WelcomeWrapper,\r\n  WelcomeCard,\r\n  WeatherContainer,\r\n  LocationInputContainer,\r\n  GoButton\r\n} from './restaurantSearch.style';\r\n//import { RestaurantCard  } from './components';\r\n//import { Container } from 'react-bootstrap';\r\nimport { withToastManager } from 'react-toast-notifications';\r\nimport zomato from '../../api/zomato';\r\n\r\n\r\n\r\nconst RestaurantCard = (props) => {\r\n\r\n      return (\r\n      <div className=\"card\">\r\n        <p>{props.restaurant}</p>\r\n      </div>\r\n      );\r\n};\r\n\r\nconst RestaurantCardList = (props) => {\r\n    console.log(props.restaurants);\r\n    const restaurants = props.restaurants.map((restaurant) => {\r\n      return <RestaurantCard key={restaurant.restaurant.id} restaurant={name} />\r\n  }); \r\n      return <div className=\"restaurant-list\">{restaurants}</div>;  \r\n};\r\n\r\nclass RestaurantSearchContent extends React.Component  {\r\n  \r\n  //var events = props.events;\r\n  //var sd = props.selectedDate;\r\n\r\n  state = {restaurants: []};\r\n\r\n  componentDidMount() {\r\n    this.getRestaurants();\r\n      \r\n  }\r\n\r\n   getRestaurants = async (term) => {\r\n        const response = await zomato.get('/search', { \r\n            params: { query: 'entity_id=94741%20&entity_type=zone' }        \r\n        });\r\n       \r\n        this.setState({ restaurants: response.data.restaurants });\r\n        \r\n    }\r\n  render() { \r\n    \r\n  //console.log(props.city.toString())\r\n  if (this.props.webId !== undefined) {\r\n    // CUPurl = props.webId.replace('profile/card#me', '') + 'private/events#';\r\n   // CUPurl = props.webId;\r\n  }\r\n  return (\r\n    // props.isLoading ? <WelcomeWrapper data-testid=\"welcome-wrapper\"><LoadingScreen /> </WelcomeWrapper> :\r\n    <WelcomeWrapper data-testid=\"welcome-wrapper\">\r\n      <WelcomeCard className=\"card\">\r\n        <h3>\r\n          Welcome <span>{this.props.name}</span>\r\n        </h3>\r\n        <LocationInputContainer>\r\n          <p>Show me restaurants in <input id='locationInput' placeholder=\"city state\" /><GoButton onClick={() => console.log(\"hello\")}>Go!</GoButton></p>\r\n          <span id='inputErrorMessage' />\r\n        </LocationInputContainer>\r\n        <p>\r\n          Now showing you restaurants nearby <span>{this.props.city}, {this.props.state}</span>\r\n        </p>\r\n      <RestaurantCardList restaurants={this.state.restaurants}/>\r\n      </WelcomeCard>\r\n      <WeatherContainer>\r\n\r\n      </WeatherContainer>\r\n    </WelcomeWrapper>\r\n  );\r\n  }\r\n};\r\n\r\n\r\nexport { RestaurantSearchContent };\r\nexport default withTranslation()(\r\n  isLoading(withToastManager(RestaurantSearchContent))\r\n);\r\n"]},"metadata":{},"sourceType":"module"}