{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\src\\\\components\\\\Utils\\\\ToasterNotification\\\\toaster-notification.component.js\";\nimport React from \"react\";\nimport { ToastConsumer } from \"react-toast-notifications\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ToasterWrapper } from \"./toaster-notification.style\";\n\nvar ToasterNotification = function ToasterNotification(props) {\n  var appearance = props.appearance,\n      children = props.children,\n      onDismiss = props.onDismiss;\n  var isArray = Array.isArray(children);\n  var title = isArray ? children[0] : children;\n  var content = isArray && children[1];\n  return React.createElement(ToasterWrapper, {\n    className: \"toaster-wrap--primary toaster \".concat(appearance),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"toaster-wrap__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, title && React.createElement(\"p\", {\n    className: \"content__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, title), content && React.createElement(\"p\", {\n    className: \"content__message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, content)), React.createElement(\"div\", {\n    className: \"toaster-wrap__dismiss\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(ToastConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, function () {\n    return React.createElement(FontAwesomeIcon, {\n      icon: \"times\",\n      className: \"fa fa-times\",\n      onClick: onDismiss,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default ToasterNotification;","map":{"version":3,"sources":["C:\\Users\\SoDiAl\\Documents\\WebDev2019\\SolidReactTest\\src\\components\\Utils\\ToasterNotification\\toaster-notification.component.js"],"names":["React","ToastConsumer","FontAwesomeIcon","ToasterWrapper","ToasterNotification","props","appearance","children","onDismiss","isArray","Array","title","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,cAAT;;AAQA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAkB;AAAA,MACpCC,UADoC,GACAD,KADA,CACpCC,UADoC;AAAA,MACxBC,QADwB,GACAF,KADA,CACxBE,QADwB;AAAA,MACdC,SADc,GACAH,KADA,CACdG,SADc;AAE5C,MAAMC,OAAO,GAAGC,KAAK,CAACD,OAAN,CAAcF,QAAd,CAAhB;AACA,MAAMI,KAAK,GAAGF,OAAO,GAAGF,QAAQ,CAAC,CAAD,CAAX,GAAiBA,QAAtC;AACA,MAAMK,OAAO,GAAGH,OAAO,IAAIF,QAAQ,CAAC,CAAD,CAAnC;AACA,SACE,oBAAC,cAAD;AAAgB,IAAA,SAAS,0CAAmCD,UAAnC,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIK,KAAK,IAAI;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,KAA/B,CADb,EAEIC,OAAO,IAAI;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,OAAjC,CAFf,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,WACC,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAC,OAAtB;AAA8B,MAAA,SAAS,EAAC,aAAxC;AAAsD,MAAA,OAAO,EAAEJ,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAAA,GADH,CADA,CALF,CADF;AAeD,CApBD;;AAsBA,eAAeJ,mBAAf","sourcesContent":["import React from \"react\";\nimport { ToastConsumer } from \"react-toast-notifications\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ToasterWrapper } from \"./toaster-notification.style\";\n\ntype Props = {\n  appearance: String,\n  children: Node,\n  onDismiss: () => void\n};\n\nconst ToasterNotification = (props: Props) => {\n  const { appearance, children, onDismiss } = props;\n  const isArray = Array.isArray(children);\n  const title = isArray ? children[0] : children;\n  const content = isArray && children[1];\n  return (\n    <ToasterWrapper className={`toaster-wrap--primary toaster ${appearance}`}>\n      <div className=\"toaster-wrap__content\">\n        { title && <p className=\"content__title\">{title}</p> }\n        { content && <p className=\"content__message\">{content}</p> }\n      </div>\n      <div className=\"toaster-wrap__dismiss\">\n      <ToastConsumer>\n        {() => (\n          <FontAwesomeIcon icon=\"times\" className=\"fa fa-times\" onClick={onDismiss} />\n        )}\n      </ToastConsumer>\n      </div>\n    </ToasterWrapper>\n  );\n};\n\nexport default ToasterNotification;\n"]},"metadata":{},"sourceType":"module"}