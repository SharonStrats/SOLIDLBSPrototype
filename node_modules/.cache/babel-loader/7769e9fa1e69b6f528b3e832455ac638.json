{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\src\\\\containers\\\\RestaurantSearch\\\\restaurantSearch.container.js\";\nimport React, { Fragment } from 'react';\nimport RestaurantSearchContent from \"./restaurantSearch.component\"; //import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { withToastManager } from 'react-toast-notifications';\nimport { useWebId } from '@inrupt/solid-react-components';\nimport { Header, RestaurantSearchContainer, RestaurantSearchWrapper } from \"./restaurantSearch.style\";\nimport data from '@solid/query-ldflex';\nimport { namedNode } from '@rdfjs/data-model';\n\nfunction getData(_x) {\n  return _getData.apply(this, arguments);\n}\n/**\r\n * We are using ldflex to fetch profile data from a solid pod.\r\n * ldflex libary is using json-LD for this reason you will see async calls\r\n * when we want to get a field value, why ? becuase they are expanded the data\r\n * this means the result will have a better format to read on Javascript.\r\n * for more information please go to: https://github.com/solid/query-ldflex\r\n */\n\n\nfunction _getData() {\n  _getData = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(CUPurl) {\n    var query, user, nameLd;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // loading new events\n            query = '';\n            user = data[this.props.webId];\n            _context.next = 4;\n            return user.name;\n\n          case 4:\n            nameLd = _context.sent;\n            console.log(user);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _getData.apply(this, arguments);\n}\n\nvar RestaurantSearch = function RestaurantSearch(_ref) {\n  var ToastManager = _ref.ToastManager;\n  //                       webId={this.props.webId}\n  var webId = useWebId();\n  console.log(webId); //console.log(props.city.toString())\n\n  if (webId !== undefined) {\n    //var CUPurl = webId.replace('profile/card#me', '') + 'private/events#';\n    var CUPurl = webId;\n  }\n\n  getData(CUPurl);\n  var image = '';\n  var isLoading = false;\n  var name = 'sharon';\n  var selectedDate = null;\n  return React.createElement(RestaurantSearchWrapper, {\n    \"data-testid\": \"restaurant-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(RestaurantSearchContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, webId && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(RestaurantSearchContent, {\n    city: \"Melbourne\",\n    state: \"Victoria\",\n    name: name,\n    image: image,\n    isLoading: isLoading,\n    selectedDate: selectedDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))));\n};\n\nexport default withToastManager(RestaurantSearch);","map":{"version":3,"sources":["C:\\Users\\SoDiAl\\Documents\\WebDev2019\\SolidReactTest\\src\\containers\\RestaurantSearch\\restaurantSearch.container.js"],"names":["React","Fragment","RestaurantSearchContent","withToastManager","useWebId","Header","RestaurantSearchContainer","RestaurantSearchWrapper","data","namedNode","getData","CUPurl","query","user","props","webId","name","nameLd","console","log","RestaurantSearch","ToastManager","undefined","image","isLoading","selectedDate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,uBAAP,qC,CACA;;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,SACIC,MADJ,EAEIC,yBAFJ,EAGIC,uBAHJ;AAKA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,SAAT,QAA0B,mBAA1B;;SAIeC,O;;;AAUf;;;;;;;;;;;;2BAVA,iBAAuBC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AACIC,YAAAA,KAFR,GAEgB,EAFhB;AAGUC,YAAAA,IAHV,GAGiBL,IAAI,CAAC,KAAKM,KAAL,CAAWC,KAAZ,CAHrB;AAAA;AAAA,mBAIyBF,IAAI,CAACG,IAJ9B;;AAAA;AAIUC,YAAAA,MAJV;AAKIC,YAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAiBC,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAsB;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAE5C;AAEA,MAAMN,KAAK,GAAGX,QAAQ,EAAtB;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAL4C,CAM5C;;AACA,MAAIA,KAAK,KAAKO,SAAd,EAAyB;AACrB;AACA,QAAIX,MAAM,GAAGI,KAAb;AACH;;AACDL,EAAAA,OAAO,CAACC,MAAD,CAAP;AACA,MAAMY,KAAK,GAAG,EAAd;AACA,MAAMC,SAAS,GAAG,KAAlB;AACA,MAAMR,IAAI,GAAG,QAAb;AACA,MAAMS,YAAY,GAAG,IAArB;AACI,SACI,oBAAC,uBAAD;AAAyB,mBAAY,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,KAAK,IACF,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGA,oBAAC,uBAAD;AACI,IAAA,IAAI,EAAC,WADT;AAEI,IAAA,KAAK,EAAC,UAFV;AAGI,IAAA,IAAI,EAAEC,IAHV;AAII,IAAA,KAAK,EAAEO,KAJX;AAKI,IAAA,SAAS,EAAEC,SALf;AAMI,IAAA,YAAY,EAAEC,YANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CAFR,CADJ,CADJ;AAsBP,CAtCA;;AAwCD,eAAetB,gBAAgB,CAACiB,gBAAD,CAA/B","sourcesContent":["import React, { Fragment } from 'react';\r\nimport RestaurantSearchContent from './restaurantSearch.component';\r\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { withToastManager } from 'react-toast-notifications';\r\nimport { useWebId } from '@inrupt/solid-react-components';\r\nimport {\r\n    Header,\r\n    RestaurantSearchContainer,\r\n    RestaurantSearchWrapper\r\n} from './restaurantSearch.style';\r\nimport data from '@solid/query-ldflex';\r\nimport { namedNode } from '@rdfjs/data-model';\r\n\r\n\r\n\r\nasync function getData(CUPurl) {\r\n    // loading new events\r\n    let query = '';\r\n    const user = data[this.props.webId];\r\n    const nameLd = await user.name;\r\n    console.log(user);\r\n\r\n} \r\n\r\n\r\n/**\r\n * We are using ldflex to fetch profile data from a solid pod.\r\n * ldflex libary is using json-LD for this reason you will see async calls\r\n * when we want to get a field value, why ? becuase they are expanded the data\r\n * this means the result will have a better format to read on Javascript.\r\n * for more information please go to: https://github.com/solid/query-ldflex\r\n */\r\n const RestaurantSearch = ({ ToastManager }) => {\r\n   \r\n    //                       webId={this.props.webId}\r\n   \r\n    const webId = useWebId();\r\n    console.log(webId);\r\n    //console.log(props.city.toString())\r\n    if (webId !== undefined) {\r\n        //var CUPurl = webId.replace('profile/card#me', '') + 'private/events#';\r\n        var CUPurl = webId;\r\n    }\r\n    getData(CUPurl);\r\n    const image = '';\r\n    const isLoading = false;\r\n    const name = 'sharon';\r\n    const selectedDate = null;\r\n        return (\r\n            <RestaurantSearchWrapper data-testid=\"restaurant-component\">\r\n                <RestaurantSearchContainer>\r\n                    {webId && (\r\n                        <Fragment>\r\n                            <Header>\r\n                            </Header>\r\n                        <RestaurantSearchContent\r\n                            city=\"Melbourne\"\r\n                            state=\"Victoria\"\r\n                            name={name}\r\n                            image={image}\r\n                            isLoading={isLoading}\r\n                            selectedDate={selectedDate}\r\n                        />\r\n                        </Fragment>\r\n\r\n                    )}\r\n                </RestaurantSearchContainer>\r\n            </RestaurantSearchWrapper>\r\n        );\r\n    \r\n};\r\n\r\nexport default withToastManager(RestaurantSearch);\r\n"]},"metadata":{},"sourceType":"module"}