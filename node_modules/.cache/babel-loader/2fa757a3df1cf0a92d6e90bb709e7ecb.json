{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport BlankNode from './blank-node';\nimport ClassOrder from './class-order';\nimport Node from './node-internal';\n\nvar Collection =\n/*#__PURE__*/\nfunction (_Node) {\n  _inherits(Collection, _Node);\n\n  function Collection(initial) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this));\n    _this.termType = Collection.termType;\n    _this.id = BlankNode.nextId++;\n    _this.elements = [];\n    _this.closed = false;\n\n    if (initial && initial.length > 0) {\n      initial.forEach(function (element) {\n        _this.elements.push(Node.fromValue(element));\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"append\",\n    value: function append(element) {\n      return this.elements.push(element);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.closed = true;\n      return this.closed;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      return this.elements.shift();\n    }\n  }, {\n    key: \"substitute\",\n    value: function substitute(bindings) {\n      var elementsCopy = this.elements.map(function (ea) {\n        ea.substitute(bindings);\n      });\n      return new Collection(elementsCopy);\n    }\n  }, {\n    key: \"toNT\",\n    value: function toNT() {\n      return BlankNode.NTAnonymousNodePrefix + this.id;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return '(' + this.elements.join(' ') + ')';\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(element) {\n      return this.elements.unshift(element);\n    }\n  }]);\n\n  return Collection;\n}(Node);\n\nexport { Collection as default };\nCollection.termType = 'Collection';\nCollection.prototype.classOrder = ClassOrder['Collection'];\nCollection.prototype.compareTerm = BlankNode.prototype.compareTerm;\nCollection.prototype.isVar = 0;","map":null,"metadata":{},"sourceType":"module"}