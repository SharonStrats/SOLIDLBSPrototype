{"ast":null,"code":"/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _require = require('./util'),\n    callbackify = _require.callbackify,\n    normalizeDocumentLoader = _require.normalizeDocumentLoader;\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a simple queue for requesting documents.\n   */\n  function RequestQueue() {\n    _classCallCheck(this, RequestQueue);\n\n    this._requests = {};\n    this.add = callbackify(this.add.bind(this));\n  }\n\n  _createClass(RequestQueue, [{\n    key: \"wrapLoader\",\n    value: function wrapLoader(loader) {\n      var self = this;\n      self._loader = normalizeDocumentLoader(loader);\n      return function ()\n      /* url */\n      {\n        return self.add.apply(self, arguments);\n      };\n    }\n  }, {\n    key: \"add\",\n    value: function () {\n      var _add = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url) {\n        var self, promise;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                self = this;\n                promise = self._requests[url];\n\n                if (!promise) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", Promise.resolve(promise));\n\n              case 4:\n                // queue URL and load it\n                promise = self._requests[url] = self._loader(url);\n                _context.prev = 5;\n                _context.next = 8;\n                return promise;\n\n              case 8:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 9:\n                _context.prev = 9;\n                delete self._requests[url];\n                return _context.finish(9);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[5,, 9, 12]]);\n      }));\n\n      function add(_x) {\n        return _add.apply(this, arguments);\n      }\n\n      return add;\n    }()\n  }]);\n\n  return RequestQueue;\n}();","map":null,"metadata":{},"sourceType":"script"}