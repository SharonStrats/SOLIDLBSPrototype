{"ast":null,"code":"'use strict';\n/**\n * Dependencies\n * @ignore\n */\n\nvar _require = require('@trust/json-document'),\n    JSONSchema = _require.JSONSchema;\n\nvar _require2 = require('../formats'),\n    BASE64_REGEXP = _require2.BASE64_REGEXP;\n/**\n * JWK Schema\n */\n\n\nvar JWKSchema = new JSONSchema({\n  type: 'object',\n  properties: {\n    kty: {\n      type: 'string',\n      //format: 'case-sensitive',\n      enum: ['RSA', 'EC', 'oct'] // other values MAY be used\n\n    },\n    use: {\n      type: 'string',\n      //format: 'case-sensitive',\n      enum: ['sig', 'enc'] // other values MAY be used\n\n    },\n    key_ops: {\n      type: 'array',\n      //format: 'case-sensitive',\n      items: {\n        enum: ['sign', 'verify', 'encrypt', 'decrypt', 'wrapKey', 'unwrapKey', 'deriveKey', 'deriveBits'] // other values MAY be used\n\n      }\n    },\n    alg: {\n      type: 'string',\n      //format: 'case-sensitive',\n      enum: ['HS256', 'HS384', 'HS512', 'RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512', 'PS256', 'PS384', 'PS512', 'none'] // other values MAY be used\n\n    },\n    kid: {\n      type: 'string'\n    },\n    x5u: {\n      type: 'string' //format: 'url'\n\n    },\n    x5c: {\n      type: 'array' //format: BASE64_REGEXP\n\n    },\n    x5t: {\n      type: 'string' //format: BASE64_REGEXP\n      //'x5t#S256': {\n      //  type: 'string',\n      //  //format: BASE64_REGEXP\n      //}\n\n    }\n  }\n});\n/**\n * Export\n */\n\nmodule.exports = JWKSchema;","map":null,"metadata":{},"sourceType":"script"}