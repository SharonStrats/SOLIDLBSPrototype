{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\src\\\\containers\\\\RestaurantSearch\\\\restaurantSearch.container.js\";\nimport React, { Fragment } from 'react';\nimport RestaurantSearchContent from \"./restaurantSearch.component\";\nimport { useTranslation } from 'react-i18next';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { withToastManager } from 'react-toast-notifications';\nimport { useWebId, ShexFormBuilder } from '@inrupt/solid-react-components';\nimport { Header, RestaurantSearchContainer, RestaurantSearchWrapper, ShexForm, AutoSaveNotification, WebId } from \"./restaurantSearch.style\";\nimport zomato from \"../../api/zomato\";\n\nvar onSearchSubmit2 =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(term) {\n    var response2;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return zomato.get('/search', {\n              params: {\n                query: 'entity_id=94741%20&entity_type=zone'\n              }\n            });\n\n          case 2:\n            response2 = _context.sent;\n            console.log(response2);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function onSearchSubmit2(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\r\n * We are using ldflex to fetch profile data from a solid pod.\r\n * ldflex libary is using json-LD for this reason you will see async calls\r\n * when we want to get a field value, why ? becuase they are expanded the data\r\n * this means the result will have a better format to read on Javascript.\r\n * for more information please go to: https://github.com/solid/query-ldflex\r\n */\n\n\nvar RestaurantSearch = function RestaurantSearch(_ref2) {\n  var toastManager = _ref2.toastManager;\n  var webId = useWebId();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var successCallback = function successCallback() {\n    console.log(\"I was successful\");\n    toastManager.add([t('profile.successTitle'), t('profile.successCallback')], {\n      appearance: 'success'\n    });\n  };\n\n  var errorCallback = function errorCallback(e) {\n    var code = e.code || e.status;\n    var messageError = code ? \"profile.errors.\".concat(code) : \"profile.errors.default\";\n    if (code && code !== 200) toastManager.add(['Error', t(messageError)], {\n      appearance: 'error',\n      autoDismiss: false\n    });\n  };\n\n  onSearchSubmit2('test');\n  return React.createElement(RestaurantSearchWrapper, {\n    \"data-testid\": \"restaurant-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(RestaurantSearchContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, webId && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(RestaurantSearchContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))));\n};\n\nexport default withToastManager(RestaurantSearch);","map":{"version":3,"sources":["C:\\Users\\SoDiAl\\Documents\\WebDev2019\\SolidReactTest\\src\\containers\\RestaurantSearch\\restaurantSearch.container.js"],"names":["React","Fragment","RestaurantSearchContent","useTranslation","FontAwesomeIcon","withToastManager","useWebId","ShexFormBuilder","Header","RestaurantSearchContainer","RestaurantSearchWrapper","ShexForm","AutoSaveNotification","WebId","zomato","onSearchSubmit2","term","get","params","query","response2","console","log","RestaurantSearch","toastManager","webId","t","i18n","successCallback","add","appearance","errorCallback","e","code","status","messageError","autoDismiss"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,uBAAP;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,gCAA1C;AACA,SACIC,MADJ,EAEIC,yBAFJ,EAGIC,uBAHJ,EAIIC,QAJJ,EAKIC,oBALJ,EAMIC,KANJ;AASA,OAAOC,MAAP;;AAIG,IAAMC,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACKF,MAAM,CAACG,GAAP,CAAW,SAAX,EAAsB;AAC1CC,cAAAA,MAAM,EAAE;AAAEC,gBAAAA,KAAK,EAAE;AAAT;AADkC,aAAtB,CADL;;AAAA;AACbC,YAAAA,SADa;AAInBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;;AAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfL,eAAe;AAAA;AAAA;AAAA,GAArB;AAQH;;;;;;;;;AAQA,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,QAAsB;AAAA,MAAnBC,YAAmB,SAAnBA,YAAmB;AAC3C,MAAMC,KAAK,GAAGnB,QAAQ,EAAtB;;AAD2C,wBAEvBH,cAAc,EAFS;AAAA,MAEnCuB,CAFmC,mBAEnCA,CAFmC;AAAA,MAEhCC,IAFgC,mBAEhCA,IAFgC;;AAI3C,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BP,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAE,IAAAA,YAAY,CAACK,GAAb,CACI,CAACH,CAAC,CAAC,sBAAD,CAAF,EAA4BA,CAAC,CAAC,yBAAD,CAA7B,CADJ,EAEI;AACII,MAAAA,UAAU,EAAE;AADhB,KAFJ;AAMH,GARD;;AAUA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,CAAC,EAAI;AACvB,QAAMC,IAAI,GAAGD,CAAC,CAACC,IAAF,IAAUD,CAAC,CAACE,MAAzB;AACA,QAAMC,YAAY,GAAGF,IAAI,4BACDA,IADC,4BAAzB;AAGA,QAAIA,IAAI,IAAIA,IAAI,KAAK,GAArB,EACIT,YAAY,CAACK,GAAb,CAAiB,CAAC,OAAD,EAAUH,CAAC,CAACS,YAAD,CAAX,CAAjB,EAA6C;AACzCL,MAAAA,UAAU,EAAE,OAD6B;AAEzCM,MAAAA,WAAW,EAAE;AAF4B,KAA7C;AAIP,GAVD;;AAYArB,EAAAA,eAAe,CAAC,MAAD,CAAf;AACA,SACI,oBAAC,uBAAD;AAAyB,mBAAY,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKU,KAAK,IACF,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGA,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CAFR,CADJ,CADJ;AAeH,CA1CD;;AA4CA,eAAepB,gBAAgB,CAACkB,gBAAD,CAA/B","sourcesContent":["import React, { Fragment } from 'react';\r\nimport RestaurantSearchContent from './restaurantSearch.component';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { withToastManager } from 'react-toast-notifications';\r\nimport { useWebId, ShexFormBuilder } from '@inrupt/solid-react-components';\r\nimport {\r\n    Header,\r\n    RestaurantSearchContainer,\r\n    RestaurantSearchWrapper,\r\n    ShexForm,\r\n    AutoSaveNotification,\r\n    WebId,\r\n} from './restaurantSearch.style';\r\n\r\nimport zomato from '../../api/zomato';\r\n\r\n\r\n\r\n   const onSearchSubmit2 = async (term) => {\r\n        const response2 = await zomato.get('/search', { \r\n            params: { query: 'entity_id=94741%20&entity_type=zone' }        \r\n        });\r\n        console.log(response2);\r\n        \r\n    }\r\n\r\n/**\r\n * We are using ldflex to fetch profile data from a solid pod.\r\n * ldflex libary is using json-LD for this reason you will see async calls\r\n * when we want to get a field value, why ? becuase they are expanded the data\r\n * this means the result will have a better format to read on Javascript.\r\n * for more information please go to: https://github.com/solid/query-ldflex\r\n */\r\n\r\nconst RestaurantSearch = ({ toastManager }) => {\r\n    const webId = useWebId();\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const successCallback = () => {\r\n        console.log(\"I was successful\");\r\n        toastManager.add(\r\n            [t('profile.successTitle'), t('profile.successCallback')],\r\n            {\r\n                appearance: 'success',\r\n            }\r\n        );\r\n    };\r\n\r\n    const errorCallback = e => {\r\n        const code = e.code || e.status;\r\n        const messageError = code\r\n            ? `profile.errors.${code}`\r\n            : `profile.errors.default`;\r\n        if (code && code !== 200)\r\n            toastManager.add(['Error', t(messageError)], {\r\n                appearance: 'error',\r\n                autoDismiss: false,\r\n            });\r\n    };\r\n\r\n    onSearchSubmit2('test');\r\n    return (\r\n        <RestaurantSearchWrapper data-testid=\"restaurant-component\">\r\n            <RestaurantSearchContainer>\r\n                {webId && (\r\n                    <Fragment>\r\n                        <Header>\r\n                        </Header>\r\n                    <RestaurantSearchContent\r\n                    />\r\n                    </Fragment>\r\n\r\n                )}\r\n            </RestaurantSearchContainer>\r\n        </RestaurantSearchWrapper>\r\n    );\r\n};\r\n\r\nexport default withToastManager(RestaurantSearch);\r\n"]},"metadata":{},"sourceType":"module"}