{"ast":null,"code":"var has = Object.hasOwnProperty;\nvar proto = Object.getPrototypeOf;\nvar trace = Error.captureStackTrace;\nmodule.exports = StandardError;\n\nfunction StandardError(msg, props) {\n  // Let all properties be enumerable for easier serialization.\n  if (msg && typeof msg == \"object\") props = msg, msg = undefined;else this.message = msg; // Name has to be an own property (or on the prototype a single step up) for\n  // the stack to be printed with the correct name.\n\n  if (props) for (var key in props) {\n    this[key] = props[key];\n  }\n  if (!has.call(this, \"name\")) this.name = has.call(proto(this), \"name\") ? this.name : this.constructor.name;\n  if (trace && !(\"stack\" in this)) trace(this, this.constructor);\n}\n\nStandardError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: StandardError,\n    configurable: true,\n    writable: true\n  }\n}); // Set name explicitly for when the code gets minified.\n\nStandardError.prototype.name = \"StandardError\";","map":null,"metadata":{},"sourceType":"script"}