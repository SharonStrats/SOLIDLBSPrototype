{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\src\\\\components\\\\NavBar\\\\nav-bar.component.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navigation, Toolbar, HamburgerButton, MobileNavigation } from \"./children\";\n\nvar NavBar = function NavBar(props) {\n  var navigation = props.navigation,\n      toolbar = props.toolbar,\n      sticky = props.sticky,\n      t = props.t;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpenMobile = _useState2[0],\n      setOpenMobile = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      profileOptions = _useState4[0],\n      setProfileOption = _useState4[1];\n\n  var componentElement = React.createRef();\n\n  var setNavFixed = function setNavFixed() {\n    if (componentElement) {\n      var navHeight = componentElement.clientHeight;\n      var content = document.getElementsByClassName('contentApp');\n\n      if (content.length > 0) {\n        content[0].style['margin-top'] = \"\".concat(navHeight, \"px\");\n      }\n    }\n  };\n\n  var onComponentResize = function onComponentResize() {\n    setNavFixed();\n    window.addEventListener('resize', function () {\n      setNavFixed();\n\n      if (window.innerWidth >= 1024 && isOpenMobile) {\n        setOpenMobile(false);\n      }\n    });\n  };\n\n  useEffect(function () {\n    if (sticky) {\n      onComponentResize();\n    }\n\n    getUserProfileOptions();\n  }, [props, isOpenMobile]);\n\n  var toggleMobileMenu = function toggleMobileMenu() {\n    setOpenMobile(!isOpenMobile);\n  };\n\n  var getUserProfileOptions = function getUserProfileOptions() {\n    var profile = toolbar ? toolbar.filter(function (bar) {\n      return bar.id !== 'language';\n    }) : [];\n    setProfileOption(profile);\n  };\n\n  return React.createElement(\"header\", {\n    role: \"navigation\",\n    className: \"header header__desktop fixed\",\n    ref: function ref(el) {\n      return componentElement = el;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"header-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"logo-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/welcome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/img/inrupt.svg\",\n    alt: \"inrupt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/restaurantSearch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/img/inrupt2.svg\",\n    alt: \"test\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))), isOpenMobile ? React.createElement(MobileNavigation, {\n    navigation: navigation,\n    toolbar: toolbar,\n    isOpenMobile: isOpenMobile,\n    toggleMobileMenu: toggleMobileMenu,\n    t: t,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Navigation, {\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Toolbar, {\n    toolbar: profileOptions,\n    open: true,\n    customClass: 'profile-list',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, navigation && React.createElement(Navigation, {\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), toolbar && React.createElement(Toolbar, {\n    toolbar: toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(HamburgerButton, {\n    toggleMobileMenu: toggleMobileMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })));\n};\n\nNavBar.defaultProps = {\n  sticky: true\n};\nexport default NavBar;","map":{"version":3,"sources":["C:\\Users\\SoDiAl\\Documents\\WebDev2019\\SolidReactTest\\src\\components\\NavBar\\nav-bar.component.js"],"names":["React","useEffect","useState","Fragment","Link","Navigation","Toolbar","HamburgerButton","MobileNavigation","NavBar","props","navigation","toolbar","sticky","t","isOpenMobile","setOpenMobile","profileOptions","setProfileOption","componentElement","createRef","setNavFixed","navHeight","clientHeight","content","document","getElementsByClassName","length","style","onComponentResize","window","addEventListener","innerWidth","getUserProfileOptions","toggleMobileMenu","profile","filter","bar","id","el","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport {\n    Navigation,\n    Toolbar,\n    HamburgerButton,\n    MobileNavigation,\n} from './children';\ntype Props = {\n    navigation: Array<Object>,\n    toolbar: Array<React.Node>,\n    sticky: boolean,\n};\n\nconst NavBar = (props: Props) => {\n    const { navigation, toolbar, sticky, t } = props;\n    const [isOpenMobile, setOpenMobile] = useState(false);\n    const [profileOptions, setProfileOption] = useState([]);\n    let componentElement = React.createRef();\n\n    const setNavFixed = () => {\n        if (componentElement) {\n            const navHeight = componentElement.clientHeight;\n            const content = document.getElementsByClassName('contentApp');\n            if (content.length > 0) {\n                content[0].style['margin-top'] = `${navHeight}px`;\n            }\n        }\n    };\n\n    const onComponentResize = () => {\n        setNavFixed();\n        window.addEventListener('resize', () => {\n            setNavFixed();\n\n            if (window.innerWidth >= 1024 && isOpenMobile) {\n                setOpenMobile(false);\n            }\n        });\n    };\n\n    useEffect(() => {\n        if (sticky) {\n            onComponentResize();\n        }\n\n        getUserProfileOptions();\n    }, [props, isOpenMobile]);\n\n    const toggleMobileMenu = () => {\n        setOpenMobile(!isOpenMobile);\n    };\n\n    const getUserProfileOptions = () => {\n        const profile = toolbar\n            ? toolbar.filter(bar => bar.id !== 'language')\n            : [];\n        setProfileOption(profile);\n    };\n\n    return (\n        <header\n            role=\"navigation\"\n            className=\"header header__desktop fixed\"\n            ref={el => (componentElement = el)}\n        >\n            <section className=\"header-wrap\">\n                <div className=\"logo-block\">\n                    <Link to=\"/welcome\">\n                        <img src=\"/img/inrupt.svg\" alt=\"inrupt\" />\n                    </Link>\n                    <Link to=\"/restaurantSearch\">\n                        <img src=\"/img/inrupt2.svg\" alt=\"test\" />\n                    </Link>\n                </div>\n\n                {isOpenMobile ? (\n                    <MobileNavigation\n                        navigation={navigation}\n                        toolbar={toolbar}\n                        isOpenMobile={isOpenMobile}\n                        toggleMobileMenu={toggleMobileMenu}\n                        t={t}\n                    >\n                        <Navigation navigation={navigation} />\n                        <Toolbar\n                            toolbar={profileOptions}\n                            open={true}\n                            customClass={'profile-list'}\n                        />\n                    </MobileNavigation>\n                ) : (\n                    <Fragment>\n                        {navigation && <Navigation navigation={navigation} />}\n                        {toolbar && <Toolbar toolbar={toolbar} />}\n                    </Fragment>\n                )}\n                <HamburgerButton toggleMobileMenu={toggleMobileMenu} />\n            </section>\n        </header>\n    );\n};\n\nNavBar.defaultProps = {\n    sticky: true,\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}