{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\src\\\\containers\\\\RestaurantSearch\\\\restaurantSearch.container.js\";\nimport React, { Fragment } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { withToastManager } from 'react-toast-notifications';\nimport { useWebId, ShexFormBuilder } from '@inrupt/solid-react-components';\nimport { Header, RestaurantSearchContainer, RestaurantSearchWrapper, ShexForm, AutoSaveNotification, WebId } from \"./restaurantSearch.style\";\nimport { Image } from \"./components\";\nvar defaultProfilePhoto = '/img/icon/empty-profile.svg';\n\nonSearchSubmit2 =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(term) {\n    var response2;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return zomato.get('/search', {\n              params: {\n                query: 'entity_id=94741%20&entity_type=zone'\n              }\n            });\n\n          case 2:\n            response2 = _context.sent;\n            console.log(response2);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function onSearchSubmit2(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\r\n * We are using ldflex to fetch profile data from a solid pod.\r\n * ldflex libary is using json-LD for this reason you will see async calls\r\n * when we want to get a field value, why ? becuase they are expanded the data\r\n * this means the result will have a better format to read on Javascript.\r\n * for more information please go to: https://github.com/solid/query-ldflex\r\n */\n\n\nvar RestaurantSearch = function RestaurantSearch(_ref2) {\n  var toastManager = _ref2.toastManager;\n  var webId = useWebId();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var successCallback = function successCallback() {\n    console.log(\"I was successful\");\n    toastManager.add([t('profile.successTitle'), t('profile.successCallback')], {\n      appearance: 'success'\n    });\n  };\n\n  var errorCallback = function errorCallback(e) {\n    var code = e.code || e.status;\n    var messageError = code ? \"profile.errors.\".concat(code) : \"profile.errors.default\";\n    if (code && code !== 200) toastManager.add(['Error', t(messageError)], {\n      appearance: 'error',\n      autoDismiss: false\n    });\n  };\n\n  onSearchSubmit2('test');\n  return React.createElement(RestaurantSearchWrapper, {\n    \"data-testid\": \"restaurant-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(RestaurantSearchContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, webId && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Image, Object.assign({\n    webId: webId,\n    defaultProfilePhoto: defaultProfilePhoto,\n    toastManager: toastManager\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))), React.createElement(AutoSaveNotification, {\n    className: \"banner-wrap--warning banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"banner-wrap__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"icon fa fa-exclamation-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), t('profile.autosaveNotification'))), React.createElement(ShexForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(WebId, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: \"id-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    href: webId,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, webId)), React.createElement(ShexFormBuilder, Object.assign({\n    documentUri: webId,\n    shexUri: 'https://shexshapes.inrupt.net/public/shapes/string.shex',\n    theme: {\n      form: 'shexForm',\n      shexPanel: 'shexPanel',\n      shexRoot: 'shexRoot',\n      deleteButton: 'deleteButton ids-button-stroke ids-button-stroke--secondary',\n      inputContainer: 'inputContainer',\n      addButtonStyle: 'addButton ids-button-stroke ids-button-stroke--secondary'\n    },\n    languageTheme: {\n      language: i18n.language.substring(0, 2),\n      saveBtn: t('profile.saveBtn'),\n      resetBtn: t('profile.resetBtn'),\n      addButtonText: t('profile.addBtn'),\n      deleteButton: t('profile.deleteBtn'),\n      dropdownDefaultText: t('profile.dropdownDefaultText'),\n      warningResolution: t('profile.warningResolution'),\n      formValidate: {\n        minMxNumberInclusive: t('profile.minMxNumberInclusive'),\n        minMxNumberExclusive: t('profile.minMxNumberExclusive'),\n        minMaxString: t('profile.minMaxString'),\n        default: t('profile.defaultError')\n      }\n    },\n    successCallback: successCallback,\n    errorCallback: errorCallback,\n    autoSaveMode: true\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }))))));\n};\n\nexport default withToastManager(RestaurantSearch);","map":{"version":3,"sources":["C:\\Users\\SoDiAl\\Documents\\WebDev2019\\SolidReactTest\\src\\containers\\RestaurantSearch\\restaurantSearch.container.js"],"names":["React","Fragment","useTranslation","FontAwesomeIcon","withToastManager","useWebId","ShexFormBuilder","Header","RestaurantSearchContainer","RestaurantSearchWrapper","ShexForm","AutoSaveNotification","WebId","Image","defaultProfilePhoto","onSearchSubmit2","term","zomato","get","params","query","response2","console","log","RestaurantSearch","toastManager","webId","t","i18n","successCallback","add","appearance","errorCallback","e","code","status","messageError","autoDismiss","documentUri","shexUri","theme","form","shexPanel","shexRoot","deleteButton","inputContainer","addButtonStyle","languageTheme","language","substring","saveBtn","resetBtn","addButtonText","dropdownDefaultText","warningResolution","formValidate","minMxNumberInclusive","minMxNumberExclusive","minMaxString","default","autoSaveMode"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { withToastManager } from 'react-toast-notifications';\r\nimport { useWebId, ShexFormBuilder } from '@inrupt/solid-react-components';\r\nimport {\r\n    Header,\r\n    RestaurantSearchContainer,\r\n    RestaurantSearchWrapper,\r\n    ShexForm,\r\n    AutoSaveNotification,\r\n    WebId,\r\n} from './restaurantSearch.style';\r\nimport { Image } from './components';\r\n\r\nconst defaultProfilePhoto = '/img/icon/empty-profile.svg';\r\n\r\n    onSearchSubmit2 = async (term) => {\r\n        const response2 = await zomato.get('/search', { \r\n            params: { query: 'entity_id=94741%20&entity_type=zone' }        \r\n        });\r\n        console.log(response2);\r\n        \r\n    }\r\n\r\n/**\r\n * We are using ldflex to fetch profile data from a solid pod.\r\n * ldflex libary is using json-LD for this reason you will see async calls\r\n * when we want to get a field value, why ? becuase they are expanded the data\r\n * this means the result will have a better format to read on Javascript.\r\n * for more information please go to: https://github.com/solid/query-ldflex\r\n */\r\n\r\nconst RestaurantSearch = ({ toastManager }) => {\r\n    const webId = useWebId();\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const successCallback = () => {\r\n        console.log(\"I was successful\");\r\n        toastManager.add(\r\n            [t('profile.successTitle'), t('profile.successCallback')],\r\n            {\r\n                appearance: 'success',\r\n            }\r\n        );\r\n    };\r\n\r\n    const errorCallback = e => {\r\n        const code = e.code || e.status;\r\n        const messageError = code\r\n            ? `profile.errors.${code}`\r\n            : `profile.errors.default`;\r\n        if (code && code !== 200)\r\n            toastManager.add(['Error', t(messageError)], {\r\n                appearance: 'error',\r\n                autoDismiss: false,\r\n            });\r\n    };\r\n\r\n    onSearchSubmit2('test');\r\n    return (\r\n        <RestaurantSearchWrapper data-testid=\"restaurant-component\">\r\n            <RestaurantSearchContainer>\r\n                {webId && (\r\n                    <Fragment>\r\n                        <Header>\r\n                            <Image\r\n                                {...{\r\n                                    webId,\r\n                                    defaultProfilePhoto,\r\n                                    toastManager,\r\n                                }}\r\n                            />\r\n                        </Header>\r\n\r\n                        <AutoSaveNotification className=\"banner-wrap--warning banner\">\r\n                            <div className=\"banner-wrap__content\">\r\n                                <i className=\"icon fa fa-exclamation-circle\" />\r\n                                {t('profile.autosaveNotification')}\r\n                            </div>\r\n                        </AutoSaveNotification>\r\n\r\n                        <ShexForm>\r\n                            <WebId>\r\n                                <FontAwesomeIcon icon=\"id-card\" />\r\n                                <a\r\n                                    href={webId}\r\n                                    target=\"_blank\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                >\r\n                                    {webId}\r\n                                </a>\r\n                            </WebId>\r\n                            <ShexFormBuilder\r\n                                {...{\r\n                                    documentUri: webId,\r\n                                    shexUri:\r\n                                        'https://shexshapes.inrupt.net/public/shapes/string.shex',\r\n                                    theme: {\r\n                                        form: 'shexForm',\r\n                                        shexPanel: 'shexPanel',\r\n                                        shexRoot: 'shexRoot',\r\n                                        deleteButton:\r\n                                            'deleteButton ids-button-stroke ids-button-stroke--secondary',\r\n                                        inputContainer: 'inputContainer',\r\n                                        addButtonStyle:\r\n                                            'addButton ids-button-stroke ids-button-stroke--secondary',\r\n                                    },\r\n                                    languageTheme: {\r\n                                        language: i18n.language.substring(0, 2),\r\n                                        saveBtn: t('profile.saveBtn'),\r\n                                        resetBtn: t('profile.resetBtn'),\r\n                                        addButtonText: t('profile.addBtn'),\r\n                                        deleteButton: t('profile.deleteBtn'),\r\n                                        dropdownDefaultText: t(\r\n                                            'profile.dropdownDefaultText'\r\n                                        ),\r\n                                        warningResolution: t(\r\n                                            'profile.warningResolution'\r\n                                        ),\r\n                                        formValidate: {\r\n                                            minMxNumberInclusive: t(\r\n                                                'profile.minMxNumberInclusive'\r\n                                            ),\r\n                                            minMxNumberExclusive: t(\r\n                                                'profile.minMxNumberExclusive'\r\n                                            ),\r\n                                            minMaxString: t(\r\n                                                'profile.minMaxString'\r\n                                            ),\r\n                                            default: t('profile.defaultError'),\r\n                                        },\r\n                                    },\r\n                                    successCallback,\r\n                                    errorCallback,\r\n                                    autoSaveMode: true,\r\n                                }}\r\n                            />\r\n                        </ShexForm>\r\n                    </Fragment>\r\n                )}\r\n            </RestaurantSearchContainer>\r\n        </RestaurantSearchWrapper>\r\n    );\r\n};\r\n\r\nexport default withToastManager(RestaurantSearch);\r\n"]},"metadata":{},"sourceType":"module"}