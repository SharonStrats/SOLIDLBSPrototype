{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar IdentityManager =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function IdentityManager() {\n    var providers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, IdentityManager);\n\n    this._providers = providers;\n  }\n\n  _createClass(IdentityManager, [{\n    key: \"addProviderSettings\",\n    value: function addProviderSettings(providerSettings) {\n      var url = providerSettings.provider.url;\n      var provider = this._providers[url] || (this._providers[url] = {});\n      provider.providerSettings = providerSettings;\n    }\n  }, {\n    key: \"getProviderSettings\",\n    value: function getProviderSettings(url) {\n      return this._providers[url] && this._providers[url].providerSettings;\n    }\n  }, {\n    key: \"addSession\",\n    value: function addSession(providerSettings, username, session) {\n      this.getSessions(providerSettings)[username] = session;\n    }\n  }, {\n    key: \"getSession\",\n    value: function getSession(providerSettings, username) {\n      return this.getSessions(providerSettings)[username];\n    }\n  }, {\n    key: \"getSessions\",\n    value: function getSessions(providerSettings) {\n      var url = providerSettings.provider.url;\n      var provider = this._providers[url] || (this._providers[url] = {});\n      var sessions = provider.sessions || (provider.sessions = {});\n      return sessions;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return JSON.stringify({\n        providers: this._providers\n      });\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      var _JSON$parse = JSON.parse(json),\n          providers = _JSON$parse.providers;\n\n      return new IdentityManager(providers || {});\n    }\n  }]);\n\n  return IdentityManager;\n}();\n\nmodule.exports = IdentityManager;","map":null,"metadata":{},"sourceType":"script"}