{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\SoDiAl\\\\Documents\\\\WebDev2019\\\\SolidReactTest\\\\src\\\\containers\\\\RestaurantSearch\\\\restaurantSearch.component.js\";\nimport React from 'react';\nimport { Uploader } from '@inrupt/solid-react-components';\nimport isLoading from \"../../hocs/isLoading\";\nimport { Trans, withTranslation } from 'react-i18next';\nimport { WelcomeWrapper, WelcomeCard, HourlyWeatherCard, WeeklyWeatherCard, WeatherContainer, LocationInputContainer, GoButton } from \"./restaurantSearch.style\";\nimport { Container } from 'react-bootstrap';\nimport { withToastManager } from 'react-toast-notifications';\nimport { ImageProfile } from \"../../components\";\nimport { Calendar } from 'react-calendar';\nimport $rdf from \"rdflib\";\nimport { get } from 'https';\nimport { keyframes } from 'emotion';\nimport \"./results.css\";\nimport { min, updateLocale } from 'moment'; //import { deleteTriples } from '../../parse';\n//import LoadingScreen from '../loadingSrceen';\n\nimport { directive } from '@babel/types';\nimport WeeklyWeather from \"./WeeklyWeather/WeeklyWeatherComponent\";\nimport HourlyWeather from \"./HourlyWeather/HourlyWeatherComponent\";\nimport DisplayNav from \"./NavTabs/DisplalyNav\"; //import EventDisplay from './EventDisplay/EventDisplay';\n\nvar CUPurl;\nvar updateLocation;\nvar loadSetter;\nvar eventSetter; // RG - 2019-02-28\n// Loads the data from a URL into the local store\n\nvar loadFromUrl = function loadFromUrl(url, store) {\n  return new Promise(function (resolve, reject) {\n    var fetcher = new $rdf.Fetcher(store);\n\n    try {\n      fetcher.load(url).then(function (response) {\n        resolve(response.responseText); // console.debug(response.responseText);\n        // $rdf.parse(response.responseText, store, $rdf.sym(url).uri,\"application/rdf\");\n      });\n    } catch (err) {\n      reject(err);\n    }\n  });\n}; // RG - 2019-02-28\n// Prepares a query by converting SPARQL into a Solid query\n\n\nvar prepare = function prepare(qryStr, store) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var query = $rdf.SPARQLToQuery(qryStr, false, store);\n      resolve(query);\n    } catch (err) {\n      reject(err);\n    }\n  });\n}; // RG - 2019-02-28\n// Executes a query on the local store\n\n\nvar execute = function execute(qry, store) {\n  return new Promise(function (resolve, reject) {\n    // console.debug(\"here\");\n    var wanted = qry.vars;\n    var resultAry = [];\n    store.query(qry, function (results) {\n      // console.debug(\"here1\");\n      if (typeof results === \"undefined\") {\n        reject(\"No results.\");\n      } else {\n        var row = rowHandler(wanted, results); // console.debug(row);\n\n        if (row) resultAry.push(row);\n      }\n    }, {}, function () {\n      resolve(resultAry);\n    });\n  });\n}; // RG - 2019-02-28\n// Puts query results into an array according to the projection\n\n\nvar rowHandler = function rowHandler(wanted, results) {\n  var row = {};\n\n  for (var r in results) {\n    var found = false;\n    var got = r.replace(/^\\?/, \"\");\n\n    if (wanted.length) {\n      for (var w in wanted) {\n        if (got === wanted[w].label) {\n          found = true;\n          continue;\n        }\n      }\n\n      if (!found) continue;\n    }\n\n    row[got] = results[r].value;\n  }\n\n  return row;\n};\n\nfunction getData(_x) {\n  return _getData.apply(this, arguments);\n}\n/**\r\n * Welcome Page UI component, containing the styled components for the Welcome Page\r\n * Image component will get theimage context and resolve the value to render.\r\n * @param props\r\n */\n\n\nfunction _getData() {\n  _getData = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(date) {\n    var query, store;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // loading new events\n            query = '';\n            store = $rdf.graph();\n            loadFromUrl(CUPurl, store).then(function () {\n              return prepare(query, store).then(function (qry) {\n                return execute(qry, store).then(function (results) {// do things with results \n                });\n              });\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getData.apply(this, arguments);\n}\n\nvar iterateProps = function iterateProps(row) {\n  var str = \"\";\n\n  for (var k in row) {\n    if (row.hasOwnProperty(k)) {\n      if (str.length > 0) str += \"; \";\n      str += row[k];\n    }\n  }\n\n  return str;\n};\n\nvar getResults = function getResults(results) {\n  if (results) {\n    return results.map(function (r) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, iterateProps(r));\n    });\n  } else {\n    return \"No results\";\n  }\n};\n\nfunction getDate(_x2) {\n  return _getDate.apply(this, arguments);\n}\n\nfunction _getDate() {\n  _getDate = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(value) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            getData(value); // document.getElementById(\"datediv\").innerHTML = \"the selected date is: \" + value.toString();\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getDate.apply(this, arguments);\n}\n\nfunction renderWeeklyWeather(data) {\n  var elements = [];\n  var now = new Date();\n  var day = now.getDay();\n\n  for (var i = 1; i < data.length; i++) {\n    elements.push(React.createElement(WeeklyWeather, {\n      key: 'weekly' + i,\n      index: i,\n      day: day + i,\n      condition: data[i].description,\n      temperature: data[i].temp,\n      otherInfo: data[i].otherInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }));\n  }\n\n  return elements;\n}\n\nfunction updateLoc() {\n  return _updateLoc.apply(this, arguments);\n}\n\nfunction _updateLoc() {\n  _updateLoc = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3() {\n    var input, arr, state, city, x;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log('running update');\n            document.getElementById('inputErrorMessage').innerHTML = '';\n            input = document.getElementById('locationInput').value;\n            console.log(input);\n\n            if (!(input === '')) {\n              _context3.next = 8;\n              break;\n            }\n\n            document.getElementById('inputErrorMessage').innerHTML = 'please enter a city and a state';\n            _context3.next = 19;\n            break;\n\n          case 8:\n            arr = input.split(\" \");\n            state = arr[arr.length - 1];\n            city = '';\n\n            for (x = 0; x < arr.length - 1; x++) {\n              city += arr[x] + ' ';\n            }\n\n            eventSetter(false);\n            _context3.next = 15;\n            return loadSetter(true);\n\n          case 15:\n            _context3.next = 17;\n            return updateLocation(city.trim(), state);\n\n          case 17:\n            _context3.next = 19;\n            return loadSetter(false);\n\n          case 19:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _updateLoc.apply(this, arguments);\n}\n\nvar RestaurantSearchContent = function RestaurantSearchContent(props) {\n  var name = props.name,\n      t = props.t;\n  var events = props.events;\n  var sd = props.selectedDate;\n  loadSetter = props.loadSetter;\n  updateLocation = props.updateLocation;\n  eventSetter = props.eventSetter;\n  console.log(props.city.toString());\n\n  if (props.webId !== undefined) {\n    // CUPurl = props.webId.replace('profile/card#me', '') + 'private/events#';\n    CUPurl = props.webId;\n  }\n\n  return (// props.isLoading ? <WelcomeWrapper data-testid=\"welcome-wrapper\"><LoadingScreen /> </WelcomeWrapper> :\n    React.createElement(WelcomeWrapper, {\n      \"data-testid\": \"welcome-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(WelcomeCard, {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, t('welcome.welcome'), \", \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Now showing you the weather in \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, props.city, \", \", props.state)), React.createElement(LocationInputContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Show me weather in \", React.createElement(\"input\", {\n      id: \"locationInput\",\n      placeholder: \"city state\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(GoButton, {\n      onClick: function onClick() {\n        return updateLoc();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Go!\")), React.createElement(\"span\", {\n      id: \"inputErrorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }))), React.createElement(WeatherContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(HourlyWeatherCard, {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(HourlyWeather, {\n      data: props.hourlyForecast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })), React.createElement(WeeklyWeatherCard, {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(DisplayNav, {\n      eventSetter: props.eventSetter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), props.showEvents ? React.createElement(EventDisplay, {\n      city: props.city,\n      state: props.state,\n      events: props.events,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }) : renderWeeklyWeather(props.weeklyForecast))))\n  );\n};\n\nexport { RestaurantSearchContent };\nexport default withTranslation()(isLoading(withToastManager(RestaurantSearchContent)));","map":{"version":3,"sources":["C:\\Users\\SoDiAl\\Documents\\WebDev2019\\SolidReactTest\\src\\containers\\RestaurantSearch\\restaurantSearch.component.js"],"names":["React","Uploader","isLoading","Trans","withTranslation","WelcomeWrapper","WelcomeCard","HourlyWeatherCard","WeeklyWeatherCard","WeatherContainer","LocationInputContainer","GoButton","Container","withToastManager","ImageProfile","Calendar","$rdf","get","keyframes","min","updateLocale","directive","WeeklyWeather","HourlyWeather","DisplayNav","CUPurl","updateLocation","loadSetter","eventSetter","loadFromUrl","url","store","Promise","resolve","reject","fetcher","Fetcher","load","then","response","responseText","err","prepare","qryStr","query","SPARQLToQuery","execute","qry","wanted","vars","resultAry","results","row","rowHandler","push","r","found","got","replace","length","w","label","value","getData","date","graph","iterateProps","str","k","hasOwnProperty","getResults","map","getDate","renderWeeklyWeather","data","elements","now","Date","day","getDay","i","description","temp","otherInfo","updateLoc","console","log","document","getElementById","innerHTML","input","arr","split","state","city","x","trim","RestaurantSearchContent","props","name","t","events","sd","selectedDate","toString","webId","undefined","hourlyForecast","showEvents","weeklyForecast"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Uploader } from '@inrupt/solid-react-components';\r\nimport isLoading from '@hocs/isLoading';\r\nimport { Trans, withTranslation } from 'react-i18next';\r\nimport {\r\n  WelcomeWrapper,\r\n  WelcomeCard,\r\n  HourlyWeatherCard,\r\n  WeeklyWeatherCard,\r\n  WeatherContainer,\r\n  LocationInputContainer,\r\n  GoButton\r\n} from './restaurantSearch.style';\r\nimport { Container } from 'react-bootstrap';\r\nimport { withToastManager } from 'react-toast-notifications';\r\nimport { ImageProfile } from '@components';\r\nimport { Calendar } from 'react-calendar';\r\nimport $rdf from \"rdflib\";\r\nimport { get } from 'https';\r\nimport { keyframes } from 'emotion';\r\nimport './results.css';\r\nimport { min, updateLocale } from 'moment';\r\n//import { deleteTriples } from '../../parse';\r\n//import LoadingScreen from '../loadingSrceen';\r\nimport { directive } from '@babel/types';\r\nimport WeeklyWeather from './WeeklyWeather/WeeklyWeatherComponent';\r\nimport HourlyWeather from './HourlyWeather/HourlyWeatherComponent';\r\nimport DisplayNav from './NavTabs/DisplalyNav';\r\n//import EventDisplay from './EventDisplay/EventDisplay';\r\nvar CUPurl;\r\nvar updateLocation;\r\nvar loadSetter;\r\nvar eventSetter;\r\n// RG - 2019-02-28\r\n// Loads the data from a URL into the local store\r\nconst loadFromUrl = (url, store) => {\r\n  return new Promise((resolve, reject) => {\r\n    let fetcher = new $rdf.Fetcher(store);\r\n    try {\r\n      fetcher.load(url).then(response => {\r\n        resolve(response.responseText);\r\n        // console.debug(response.responseText);\r\n        // $rdf.parse(response.responseText, store, $rdf.sym(url).uri,\"application/rdf\");\r\n      });\r\n    } catch (err) {\r\n      reject(err);\r\n    }\r\n  });\r\n};\r\n\r\n// RG - 2019-02-28\r\n// Prepares a query by converting SPARQL into a Solid query\r\nconst prepare = (qryStr, store) => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      let query = $rdf.SPARQLToQuery(qryStr, false, store);\r\n      resolve(query);\r\n    } catch (err) {\r\n      reject(err);\r\n    }\r\n  });\r\n};\r\n\r\n// RG - 2019-02-28\r\n// Executes a query on the local store\r\nconst execute = (qry, store) => {\r\n  return new Promise((resolve, reject) => {\r\n    // console.debug(\"here\");\r\n    const wanted = qry.vars;\r\n    const resultAry = [];\r\n    store.query(\r\n      qry,\r\n      results => {\r\n        // console.debug(\"here1\");\r\n        if (typeof results === \"undefined\") {\r\n          reject(\"No results.\");\r\n        } else {\r\n          let row = rowHandler(wanted, results);\r\n          // console.debug(row);\r\n          if (row) resultAry.push(row);\r\n        }\r\n      },\r\n      {},\r\n      () => {\r\n        resolve(resultAry);\r\n      }\r\n    );\r\n  });\r\n};\r\n\r\n// RG - 2019-02-28\r\n// Puts query results into an array according to the projection\r\nconst rowHandler = (wanted, results) => {\r\n  const row = {};\r\n  for (var r in results) {\r\n    let found = false;\r\n    let got = r.replace(/^\\?/, \"\");\r\n    if (wanted.length) {\r\n      for (var w in wanted) {\r\n        if (got === wanted[w].label) {\r\n          found = true;\r\n          continue;\r\n        }\r\n      }\r\n      if (!found) continue;\r\n    }\r\n    row[got] = results[r].value;\r\n  }\r\n  return row;\r\n};\r\n\r\nasync function getData(date) {\r\n  // loading new events\r\n  let query = '';\r\n  let store = $rdf.graph();\r\n  loadFromUrl(CUPurl, store).then(() =>\r\n    prepare(query, store).then(qry =>\r\n      execute(qry, store).then(results => {\r\n        // do things with results \r\n      })\r\n    )\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * Welcome Page UI component, containing the styled components for the Welcome Page\r\n * Image component will get theimage context and resolve the value to render.\r\n * @param props\r\n */\r\nconst iterateProps = row => {\r\n  var str = \"\";\r\n  for (const k in row) {\r\n    if (row.hasOwnProperty(k)) {\r\n      if (str.length > 0) str += \"; \";\r\n      str += row[k];\r\n    }\r\n  }\r\n  return str;\r\n};\r\n\r\nconst getResults = results => {\r\n  if (results) {\r\n    return results.map(r => <p>{iterateProps(r)}</p>);\r\n  } else {\r\n    return \"No results\";\r\n  }\r\n};\r\n\r\nasync function getDate(value) {\r\n  getData(value);\r\n  // document.getElementById(\"datediv\").innerHTML = \"the selected date is: \" + value.toString();\r\n}\r\n\r\nfunction renderWeeklyWeather(data) {\r\n  let elements = [];\r\n  let now = new Date();\r\n  let day = now.getDay();\r\n  for (let i = 1; i < data.length; i++) {\r\n    elements.push(<WeeklyWeather key={'weekly' + i} index={i} day={day + i} condition={data[i].description} temperature={data[i].temp} otherInfo={data[i].otherInfo} />)\r\n  }\r\n  return (elements);\r\n}\r\n\r\nasync function updateLoc() {\r\n  console.log('running update');\r\n  document.getElementById('inputErrorMessage').innerHTML = '';\r\n  let input = document.getElementById('locationInput').value;\r\n  console.log(input);\r\n  if (input === '') {\r\n    document.getElementById('inputErrorMessage').innerHTML = 'please enter a city and a state';\r\n  } else {\r\n    let arr = input.split(\" \");\r\n    let state = arr[arr.length-1];\r\n    let city = '';\r\n    for (let x = 0; x < arr.length-1;x++){\r\n      city += arr[x] + ' ';\r\n    }\r\n    eventSetter(false);\r\n    await loadSetter(true);\r\n    await updateLocation(city.trim(),state);\r\n    await loadSetter(false);\r\n  }\r\n}\r\n\r\nconst RestaurantSearchContent = props => {\r\n  var { name, t } = props;\r\n  var events = props.events;\r\n  var sd = props.selectedDate;\r\n  loadSetter = props.loadSetter;\r\n  updateLocation = props.updateLocation;\r\n  eventSetter = props.eventSetter;\r\n  console.log(props.city.toString())\r\n  if (props.webId !== undefined) {\r\n    // CUPurl = props.webId.replace('profile/card#me', '') + 'private/events#';\r\n    CUPurl = props.webId;\r\n  }\r\n  return (\r\n    // props.isLoading ? <WelcomeWrapper data-testid=\"welcome-wrapper\"><LoadingScreen /> </WelcomeWrapper> :\r\n    <WelcomeWrapper data-testid=\"welcome-wrapper\">\r\n      <WelcomeCard className=\"card\">\r\n        <h3>\r\n          {t('welcome.welcome')}, <span>{name}</span>\r\n        </h3>\r\n        <p>\r\n          Now showing you the weather in <span>{props.city}, {props.state}</span>\r\n        </p>\r\n        <LocationInputContainer>\r\n          <p>Show me weather in <input id='locationInput' placeholder=\"city state\" /><GoButton onClick={() => updateLoc()}>Go!</GoButton></p>\r\n          <span id='inputErrorMessage' />\r\n        </LocationInputContainer>\r\n      </WelcomeCard>\r\n      <WeatherContainer>\r\n        <HourlyWeatherCard className='card'>\r\n          <HourlyWeather data={props.hourlyForecast} />\r\n        </HourlyWeatherCard>\r\n        <WeeklyWeatherCard className='card'>\r\n          <DisplayNav eventSetter={props.eventSetter}/>\r\n          {props.showEvents ? (<EventDisplay city={props.city} state={props.state} events={props.events}/>) : (renderWeeklyWeather(props.weeklyForecast))}\r\n        </WeeklyWeatherCard>\r\n      </WeatherContainer>\r\n    </WelcomeWrapper>\r\n  );\r\n};\r\n\r\n\r\nexport { RestaurantSearchContent };\r\nexport default withTranslation()(\r\n  isLoading(withToastManager(RestaurantSearchContent))\r\n);\r\n"]},"metadata":{},"sourceType":"module"}