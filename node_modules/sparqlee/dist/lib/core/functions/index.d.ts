import { Map } from 'immutable';
import * as C from '../../util/Consts';
import * as E from '../Expressions';
import { NamedFunction, RegularFunction, SpecialFunctionAsync } from './FunctionClasses';
export * from './FunctionClasses';
export interface SPARQLFunction<Apply extends E.Application> {
    arity: number | number[];
    apply: Apply;
}
export declare type RegularFunctionMap = Map<C.RegularOperator, RegularFunction>;
export declare const regularFunctions: RegularFunctionMap;
export declare type SpecialFunctionAsyncMap = Map<C.SpecialOperator, SpecialFunctionAsync>;
export declare const specialFunctions: SpecialFunctionAsyncMap;
export declare type FunctionMap = Map<C.Operator, SPARQLFunction<E.Application>>;
export declare const functions: FunctionMap;
export declare type NamedFunctionMap = Map<C.NamedOperator, NamedFunction>;
export declare const namedFunctions: NamedFunctionMap;
