{"version":3,"file":"RegularFunctionDefs2.js","sourceRoot":"","sources":["../../../../lib/core/functions/RegularFunctionDefs2.ts"],"names":[],"mappings":";;AAKA,uBAAuB;AACvB,qBAAqB;AACrB,uCAAuC;AACvC,sBAAsB;AACtB,OAAO;AACP,OAAO;AAGP,4EAA4E;AAC5E,0DAA0D;AAC1D,IAAI;AAEJ,6BAA6B;AAC7B,iCAAiC;AACjC,oBAAoB;AACpB,OAAO;AAEP,8BAA8B;AAE9B,uBAAuB;AACvB,iBAAiB;AACjB,oBAAoB;AACpB,KAAK","sourcesContent":["import * as E from '../Expressions';\nimport * as X from './XPath';\n\nimport { str, bool } from './Helpers';\n\n// const str1 = f(1, [{\n//   types: ['term'],\n//   apply([arg]: [E.TermExpression]) {\n//     str(arg.str());\n//   },\n// }]);\n\n\n// function _regex2([text, pattern]: [E.Literal<string>, E.StringLiteral]) {\n//   bool(X.matches(text.typedValue, pattern.typedValue));\n// }\n\n// const regex = f([2, 3], [{\n//   types: ['string', 'string'],\n//   apply: _regex2,\n// }]);\n\n// function f(arity: number, )\n\n// export const def = {\n//   'str': str1,\n//   'regex': regex,\n// };\n"]}