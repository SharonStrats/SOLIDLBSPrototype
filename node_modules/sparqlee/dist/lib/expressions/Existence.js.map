{"version":3,"file":"Existence.js","sourceRoot":"","sources":["../../../lib/expressions/Existence.ts"],"names":[],"mappings":";;AAGA,+CAGuB;AAEvB,MAAa,SAAS;IAGpB,YACS,MAAqB,EACrB,UAAmC;QADnC,WAAM,GAAN,MAAM,CAAe;QACrB,eAAU,GAAV,UAAU,CAAyB;QAJ5C,mBAAc,GAA6B,4BAAc,CAAC,SAAS,CAAC;IAKhE,CAAC;IAEL,WAAW,CAAC,OAAiB;QAC3B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IAC/C,CAAC;CACF;AAXD,8BAWC","sourcesContent":["import { Algebra as Alg } from 'sparqlalgebrajs';\n\nimport { Bindings, ExistenceHook } from './../Types';\nimport {\n  ExistenceExpression,\n  ExpressionType,\n} from './Expressions';\n\nexport class Existence implements ExistenceExpression {\n  expressionType: ExpressionType.Existence = ExpressionType.Existence;\n\n  constructor(\n    public exists: ExistenceHook,\n    public expression: Alg.ExistenceExpression,\n  ) { }\n\n  exists_with(mapping: Bindings): Promise<boolean> {\n    return this.exists(this.expression, mapping);\n  }\n}\n"]}